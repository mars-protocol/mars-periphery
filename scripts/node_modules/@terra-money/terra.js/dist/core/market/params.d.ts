import { ParamChange } from '../params/ParamChange';
import { Dec } from '../numeric';
declare type PoolRecoveryPeriod = ParamChange.Type<'market', 'PoolRecoveryPeriod', number>;
declare type MintBasePool = ParamChange.Type<'market', 'MintBasePool', Dec>;
declare type BurnBasePool = ParamChange.Type<'market', 'BurnBasePool', Dec>;
declare type MinStabilitySpread = ParamChange.Type<'market', 'MinStabilitySpread', Dec>;
export declare type MarketParamChange = PoolRecoveryPeriod | MintBasePool | BurnBasePool | MinStabilitySpread;
export declare namespace MarketParamChange {
    type Data = ParamChange.Data.Type<PoolRecoveryPeriod> | ParamChange.Data.Type<MintBasePool> | ParamChange.Data.Type<BurnBasePool> | ParamChange.Data.Type<MinStabilitySpread>;
}
export interface MarketParamChanges {
    market?: {
        PoolRecoveryPeriod?: number;
        MintBasePool?: Dec;
        BurnBasePool?: Dec;
        MinStabilitySpread?: Dec;
    };
}
export declare namespace MarketParamChanges {
    const ConversionTable: {
        market: {
            PoolRecoveryPeriod: (((string: string, radix?: number | undefined) => number) | ((c: number) => string))[];
            MintBasePool: (((c: import("decimal.js").default.Value) => Dec) | ((c: any) => string))[];
            BurnBasePool: (((c: import("decimal.js").default.Value) => Dec) | ((c: any) => string))[];
            MinStabilitySpread: (((c: import("decimal.js").default.Value) => Dec) | ((c: any) => string))[];
        };
    };
}
export {};
