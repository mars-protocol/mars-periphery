{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "deposit_ust"
      ],
      "properties": {
        "deposit_ust": {
          "type": "object",
          "required": [
            "duration"
          ],
          "properties": {
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_ust"
      ],
      "properties": {
        "withdraw_ust": {
          "type": "object",
          "required": [
            "amount",
            "duration"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint256"
            },
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "unlock"
      ],
      "properties": {
        "unlock": {
          "type": "object",
          "required": [
            "duration"
          ],
          "properties": {
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_rewards"
      ],
      "properties": {
        "claim_rewards": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "required": [
            "new_config"
          ],
          "properties": {
            "new_config": {
              "$ref": "#/definitions/UpdateConfigMsg"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deposit_ust_in_red_bank"
      ],
      "properties": {
        "deposit_ust_in_red_bank": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Callbacks; only callable by the contract itself.",
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "$ref": "#/definitions/CallbackMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "CallbackMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "update_state_on_red_bank_deposit"
          ],
          "properties": {
            "update_state_on_red_bank_deposit": {
              "type": "object",
              "required": [
                "prev_ma_ust_balance"
              ],
              "properties": {
                "prev_ma_ust_balance": {
                  "$ref": "#/definitions/Uint256"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "update_state_on_claim"
          ],
          "properties": {
            "update_state_on_claim": {
              "type": "object",
              "required": [
                "prev_xmars_balance",
                "user"
              ],
              "properties": {
                "prev_xmars_balance": {
                  "$ref": "#/definitions/Uint256"
                },
                "user": {
                  "$ref": "#/definitions/Addr"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "dissolve_position"
          ],
          "properties": {
            "dissolve_position": {
              "type": "object",
              "required": [
                "duration",
                "user"
              ],
              "properties": {
                "duration": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "user": {
                  "$ref": "#/definitions/Addr"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    },
    "UpdateConfigMsg": {
      "type": "object",
      "properties": {
        "address_provider": {
          "description": "Contract used to query addresses related to red-bank (MARS Token)",
          "type": [
            "string",
            "null"
          ]
        },
        "deposit_window": {
          "description": "Number of seconds for which lockup deposits will be accepted",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "init_timestamp": {
          "description": "Timestamp till when deposits can be made",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "lockdrop_incentives": {
          "description": "Total MARS lockdrop incentives to be distributed among the users",
          "anyOf": [
            {
              "$ref": "#/definitions/Uint256"
            },
            {
              "type": "null"
            }
          ]
        },
        "ma_ust_token": {
          "description": "maUST token address - Minted upon UST deposits into red bank",
          "type": [
            "string",
            "null"
          ]
        },
        "max_duration": {
          "description": "Max. no. of days allowed for lockup",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "min_duration": {
          "description": "Min. no. of days allowed for lockup",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "owner": {
          "description": "Account who can update config",
          "type": [
            "string",
            "null"
          ]
        },
        "weekly_multiplier": {
          "description": "Lockdrop Reward multiplier",
          "anyOf": [
            {
              "$ref": "#/definitions/Decimal256"
            },
            {
              "type": "null"
            }
          ]
        },
        "withdrawal_window": {
          "description": "Number of seconds for which lockup withdrawals will be allowed",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      }
    }
  }
}
