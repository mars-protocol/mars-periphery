{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "description": "Admin function to update the configuration parameters",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "auction_contract_address": {
              "type": [
                "string",
                "null"
              ]
            },
            "evm_merkle_roots": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            },
            "from_timestamp": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            },
            "terra_merkle_roots": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            },
            "to_timestamp": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "enable_claims"
      ],
      "properties": {
        "enable_claims": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows Terra users to claim their MARS Airdrop",
      "type": "object",
      "required": [
        "claim_by_terra_user"
      ],
      "properties": {
        "claim_by_terra_user": {
          "type": "object",
          "required": [
            "claim_amount",
            "merkle_proof",
            "root_index"
          ],
          "properties": {
            "claim_amount": {
              "$ref": "#/definitions/Uint128"
            },
            "merkle_proof": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "root_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows EVM users to claim their MARS Airdrop",
      "type": "object",
      "required": [
        "claim_by_evm_user"
      ],
      "properties": {
        "claim_by_evm_user": {
          "type": "object",
          "required": [
            "claim_amount",
            "eth_address",
            "merkle_proof",
            "root_index",
            "signature",
            "signed_msg_hash"
          ],
          "properties": {
            "claim_amount": {
              "$ref": "#/definitions/Uint128"
            },
            "eth_address": {
              "type": "string"
            },
            "merkle_proof": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "root_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "signature": {
              "type": "string"
            },
            "signed_msg_hash": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows users to delegate their MARS tokens to the LP Bootstrap auction contract",
      "type": "object",
      "required": [
        "delegate_mars_to_bootstrap_auction"
      ],
      "properties": {
        "delegate_mars_to_bootstrap_auction": {
          "type": "object",
          "required": [
            "amount_to_delegate"
          ],
          "properties": {
            "amount_to_delegate": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Allows users to withdraw their MARS tokens",
      "type": "object",
      "required": [
        "withdraw_airdrop_reward"
      ],
      "properties": {
        "withdraw_airdrop_reward": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Admin function to facilitate transfer of the unclaimed MARS Tokens",
      "type": "object",
      "required": [
        "transfer_unclaimed_tokens"
      ],
      "properties": {
        "transfer_unclaimed_tokens": {
          "type": "object",
          "required": [
            "amount",
            "recepient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "recepient": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
