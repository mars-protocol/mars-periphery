{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "State",
  "type": "object",
  "required": [
    "final_maust_locked",
    "final_ust_locked",
    "global_reward_index",
    "total_deposits_weight",
    "total_maust_locked",
    "total_ust_locked"
  ],
  "properties": {
    "final_maust_locked": {
      "description": "maUST minted at the end of Lockdrop window upon UST deposit in red bank. This value remains unchanged post the lockdrop window",
      "allOf": [
        {
          "$ref": "#/definitions/Uint256"
        }
      ]
    },
    "final_ust_locked": {
      "description": "Total UST deposited at the end of Lockdrop window. This value remains unchanged post the lockdrop window",
      "allOf": [
        {
          "$ref": "#/definitions/Uint256"
        }
      ]
    },
    "global_reward_index": {
      "description": "Ratio of MARS rewards accured to total_maust_locked. Used to calculate MARS incentives accured by each user",
      "allOf": [
        {
          "$ref": "#/definitions/Decimal256"
        }
      ]
    },
    "total_deposits_weight": {
      "description": "Total weighted deposits",
      "allOf": [
        {
          "$ref": "#/definitions/Uint256"
        }
      ]
    },
    "total_maust_locked": {
      "description": "maUST held by the contract. This value is updated real-time upon each maUST withdrawal from red bank",
      "allOf": [
        {
          "$ref": "#/definitions/Uint256"
        }
      ]
    },
    "total_ust_locked": {
      "description": "UST deposited in the contract. This value is updated real-time upon each UST deposit / unlock",
      "allOf": [
        {
          "$ref": "#/definitions/Uint256"
        }
      ]
    }
  },
  "definitions": {
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    }
  }
}
